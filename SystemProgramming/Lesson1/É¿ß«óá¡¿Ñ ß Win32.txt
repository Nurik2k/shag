#include <iostream>
#include <Windows.h>
#include <cmath>

int main()
{
	//Get a console handle
	HWND myconsole = GetConsoleWindow();
	//Get a handle to device context
	HDC mydc = GetDC(myconsole);

	int pixel = 0;

	//Draw pixels
	for (double i = 0; i < 3.14 * 4; i += 0.05)
	{
		SetPixel(mydc, pixel, (int)(50 + 25 * cos(i)), RGB(255, 0, 0));
		pixel += 1;
	}

	ReleaseDC(myconsole, mydc);
	std::cin.ignore();
	return 0;
}


//-------------------------------------------------------------------------------------------------------

using System;
using System.Runtime.InteropServices;

//https://www.pinvoke.net/index.aspx

namespace SDP_201
{
    class Win32
    {
        //
        [DllImport("Kernel32.dll")]
        public static extern IntPtr GetConsoleWindow();
        // 
        [DllImport("User32.dll")]
        public static extern IntPtr GetDC(IntPtr hWnd);
        // 
        [DllImport("Gdi32.dll")]
        public static extern uint SetPixel(IntPtr hdc, int x, int y, uint color);

        [DllImport("User32.dll")]
        public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);
    }
    class Program
    {
        static void Main(string[] args)
        {
            IntPtr con = Win32.GetConsoleWindow();
            IntPtr hdc = Win32.GetDC(con);

            int pixel = 0;
            uint color = 0x00FFFFFF;

            //Draw pixels
            for (double i = 0; i < 3.14 * 4; i += 0.05)
            {
                int yx = 50 + 25 * Convert.ToInt32(Math.Cos(i));
                
                Win32.SetPixel(hdc, pixel, yx, color);
                pixel += 1;
            }
            Win32.ReleaseDC(con, hdc);
            Console.ReadKey();
        }
    }
}